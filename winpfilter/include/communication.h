#pragma once
#include "winpfilter.h"
#include "hook_manager.h"

#define WINPFILTER_CTL_CODE_VERSION			CTL_CODE(FILE_DEVICE_UNKNOWN,0x800, METHOD_BUFFERED,FILE_ALL_ACCESS)
#define WINPFILTER_CTL_CODE_FORWARDING_MODE CTL_CODE(FILE_DEVICE_UNKNOWN,0x801, METHOD_BUFFERED,FILE_ALL_ACCESS)
#define WINPFILTER_CTL_CODE_RX_BAD_IP_CSUM	CTL_CODE(FILE_DEVICE_UNKNOWN,0x802, METHOD_BUFFERED,FILE_ALL_ACCESS)
#define WINPFILTER_CTL_CODE_RX_BAD_TCP_CSUM CTL_CODE(FILE_DEVICE_UNKNOWN,0x803, METHOD_BUFFERED,FILE_ALL_ACCESS)
#define WINPFILTER_CTL_CODE_RX_BAD_UDP_CSUM CTL_CODE(FILE_DEVICE_UNKNOWN,0x804, METHOD_BUFFERED,FILE_ALL_ACCESS)
#define WINPFILTER_CTL_CODE_TX_NIC_IP_CSUM  CTL_CODE(FILE_DEVICE_UNKNOWN,0x805, METHOD_BUFFERED,FILE_ALL_ACCESS)
#define WINPFILTER_CTL_CODE_TX_NIC_TCP_CSUM CTL_CODE(FILE_DEVICE_UNKNOWN,0x806, METHOD_BUFFERED,FILE_ALL_ACCESS)
#define WINPFILTER_CTL_CODE_TX_NIC_UDP_CSUM CTL_CODE(FILE_DEVICE_UNKNOWN,0x807, METHOD_BUFFERED,FILE_ALL_ACCESS)
#define WINPFILTER_CTL_CODE_HOOK_INFO		CTL_CODE(FILE_DEVICE_UNKNOWN,0x808, METHOD_BUFFERED,FILE_ALL_ACCESS)

#define WINPFILTER_CTL_CODE_REGISTER_HOOK	CTL_CODE(FILE_DEVICE_UNKNOWN,0x800, METHOD_BUFFERED,FILE_ALL_ACCESS)
#define WINPFILTER_CTL_CODE_UNREGISTER_HOOK	CTL_CODE(FILE_DEVICE_UNKNOWN,0x801, METHOD_BUFFERED,FILE_ALL_ACCESS)

#pragma pack (1)
typedef struct _WINPFILTER_R0_HOOK_OP_STRUCTURE
{
	ULONG Mode;
	PVOID HookFunction;
	ULONG Priority;
	FILTER_POINT FilterPoint;

}WINPFILTER_R0_HOOK_OP_STRUCTURE, * PWINPFILTER_R0_HOOK_OP_STRUCTURE;


typedef struct _WINPFILTER_R3_HOOK_OP_STRUCTURE
{
	ULONG Mode;
	ULONG Value;

}WINPFILTER_R3_HOOK_OP_STRUCTURE, * PWINPFILTER_R3_HOOK_OP_STRUCTURE;
#pragma pack ()

NTSTATUS WPFilterCommDeviceIOCtl(PDEVICE_OBJECT DeviceObject, PIRP Irp);

NTSTATUS WPFilterCommDeviceRead(PDEVICE_OBJECT DeviceObject, PIRP Irp);

NTSTATUS WPFilterCommDeviceWrite(PDEVICE_OBJECT DeviceObject, PIRP Irp);

NTSTATUS WPFilterCommDeviceCreate(PDEVICE_OBJECT DeviceObject, PIRP Irp);

NTSTATUS WPFilterCommDeviceClose(PDEVICE_OBJECT DeviceObject, PIRP Irp);

NTSTATUS WPFilterCommDeviceClean(PDEVICE_OBJECT DeviceObject, PIRP Irp);